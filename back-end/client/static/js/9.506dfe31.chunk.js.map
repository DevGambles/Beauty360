{"version":3,"sources":["configs/services.js","configs/serviceConfig.js","redux/actions/sessions/index.js","../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx","views/pages/past_sessions/DataListSidebar.js","views/pages/past_sessions/DataListConfig.js","views/pages/past_sessions/index.js"],"names":["services","filter","service","available","serviceConfig","getData","params","customer_id","console","log","dispatch","Axios","post","then","response","data","status","rdata","page","perPage","totalPages","Math","ceil","length","fdata","newparams","undefined","calculatedPage","calculatedPerPage","slice","type","toast","error","getCustomers","filterData","value","deleteData","obj","msg","updateData","getState","addData","module","exports","require","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","OutsideAlerter","props","clickEvent","wrapperRef","useRef","outsideClick","useEffect","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","React","children","Multiselect","c","_this","state","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","createRef","searchBox","onChange","bind","onKeyPress","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","onCloseOptionList","isVisible","initialSetValue","this","groupBy","singleSelect","groupByOptions","_proto","Promise","resolve","_this2","setState","componentDidMount","componentDidUpdate","prevProps","prevSelectedvalues","JSON","stringify","focus","componentWillUnmount","clearTimeout","skipCheck","isObject","displayValue","l","optionList","findIndex","v","item","indexOf","reduce","r","a","key","push","create","onSearch","onKeyPressFn","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","e","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","renderOptionList","emptyRecordMsg","loadingMessage","o","loading","className","optionContainer","notFound","keys","map","Fragment","groupHeading","option","isSelected","_this6","onClick","readOnly","checked","optionValueDecorator","_this7","customCloseIcon","_this8","chips","selectedValueDecorator","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","_this9","placeholder","id","name","hidePlaceholder","disable","showArrow","customArrow","multiselectContainer","hideSelectedList","onKeyDown","inputField","autoComplete","disabled","onMouseDown","preventDefault","render","Component","defaultProps","skinTypes","label","getToday","date","Date","year","getFullYear","month","getMonth","dt","getDate","DataListSidebar","_id","area","skintype","selectedSkinTypeValue","kj","cost","comments","color_used","technique","pigment_used","session_duration","type_of_pigmentation","ink_used","type_of_peel","duration","needle_depth","serum_used","products_used","sclerosing_agent_used","pulses","units_used","product_used","amount_used","type_of_crystals_used","procedure","addNew","includes","selectedList","selectedItem","arrOfVals","forEach","removedItem","handleSubmit","dataParams","handleSidebar","prevState","areas","selectedValue","show","classnames","size","Button","color","outline","wheelPropagation","FormGroup","Label","for","required","bodyarea","classNamePrefix","Input","inputMode","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","customers","selects","customer","defaultValue","width","handleCustomerChnage","UncontrolledDropdown","DropdownToggle","total","DropdownMenu","tag","right","DropdownItem","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","omit","cell","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","thumbView","history","handleCustomer","boolean","warn","urlPrefix","parseInt","handlePagination","cols","col","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","selectableRowsComponentProps","icon","dataList","filteredData","connect","sessions","Sessions","Row","Col","sm","queryString","parse","location"],"mappings":";kJA8FeA,IA9FE,CACb,CACI,MAAS,qBACT,MAAS,QACT,IAAO,iBACP,WAAa,GAEjB,CACI,MAAS,mBACT,MAAS,SACT,IAAO,kBACP,WAAa,GAEjB,CACI,MAAS,qBACT,MAAS,QACT,IAAO,iBACP,WAAa,GAEjB,CACI,MAAS,oBACT,MAAS,OACT,IAAO,gBACP,WAAa,GAEjB,CACI,MAAS,YACT,MAAS,SACT,IAAO,kBACP,WAAa,GAEjB,CACI,MAAS,iBACT,MAAS,YACT,IAAO,qBACP,WAAa,GAEjB,CACI,MAAS,gBACT,MAAS,eACT,IAAO,oBACP,WAAa,GAEjB,CACI,MAAS,gBACT,MAAS,gBACT,IAAO,mBACP,WAAa,GAEjB,CACI,MAAS,SACT,MAAS,SACT,IAAO,kBACP,WAAa,GAEjB,CACI,MAAS,sCACT,MAAS,gBACT,IAAO,kBACP,WAAa,GAEjB,CACI,MAAS,mBACT,MAAS,QACT,IAAO,iBACP,WAAa,GAEjB,CACI,MAAS,iBACT,MAAS,UACT,IAAO,mBACP,WAAa,GAEjB,CACI,MAAS,oBACT,MAAS,oBACT,IAAO,mBACP,WAAa,GAEjB,CACI,MAAS,kBACT,MAAS,aACT,IAAO,sBACP,WAAa,GAEjB,CACI,MAAS,sBACT,MAAS,eACT,IAAO,wBACP,WAAa,IAKGC,QAAO,SAACC,GAAc,OAAOA,EAAQC,c,mGC6B9CC,IA3HO,CAClB,MAAU,CACV,OACA,OACA,WACA,KACA,OACA,YAEA,OAAW,CACX,OACA,OACA,aACA,YACA,OACA,YAEA,MAAU,CACV,OACA,OACA,eACA,mBACA,OACA,YAEA,KAAS,CACT,OACA,OACA,uBACA,SACA,OACA,YAEA,OAAW,CACX,OACA,OACA,WACA,mBACA,OACA,YAEA,YAAc,CACd,OACA,OACA,eACA,WACA,OACA,YAEA,eAAiB,CACjB,OACA,OACA,eACA,WACA,OACA,YAEA,cAAkB,CAClB,OACA,OACA,eACA,aACA,OACA,YAEA,OAAW,CACX,OACA,OACA,gBACA,WACA,OACA,YAEA,cAAkB,CAClB,OACA,OACA,wBACA,SACA,OACA,YA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","file":"static/js/9.506dfe31.chunk.js","sourcesContent":["const services = [\r\n    {\r\n        \"label\": \"Laser Hair Removal\",\r\n        \"value\": \"Laser\",\r\n        \"url\": \"/lasersessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Permanent Makeup\",\r\n        \"value\": \"Makeup\",\r\n        \"url\": \"/makeupsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Scalp Pigmentation\",\r\n        \"value\": \"Scalp\",\r\n        \"url\": \"/scalpsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Skin Pigmentation\",\r\n        \"value\": \"Skin\",\r\n        \"url\": \"/skinsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Tattooing\",\r\n        \"value\": \"Tattoo\",\r\n        \"url\": \"/tattoosessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Chemical Peels\",\r\n        \"value\": \"Chem-Peel\",\r\n        \"url\": \"/chem-peelsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Natural Peels\",\r\n        \"value\": \"Natural-Peel\",\r\n        \"url\": \"/nat-peelsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Microneedling\",\r\n        \"value\": \"Microneedling\",\r\n        \"url\": \"/micro-nsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Facial\",\r\n        \"value\": \"Facial\",\r\n        \"url\": \"/facialsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Sclerotherapy(Varicose/SpiderVeins)\",\r\n        \"value\": \"Sclerotherapy\",\r\n        \"url\": \"/sclerosessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Botox Injections\",\r\n        \"value\": \"Botox\",\r\n        \"url\": \"/botoxsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Dermal Fillers\",\r\n        \"value\": \"Fillers\",\r\n        \"url\": \"/fillerssessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Microdermabrasion\",\r\n        \"value\": \"Microdermabrasion\",\r\n        \"url\": \"/micro-dsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Body Contouring\",\r\n        \"value\": \"Contouring\",\r\n        \"url\": \"/contouringsessions\",\r\n        \"available\": true\r\n    },\r\n    {\r\n        \"label\": \"Facial Rejuvenation\",\r\n        \"value\": \"Rejuvenation\",\r\n        \"url\": \"/rejuvenationsessions\",\r\n        \"available\": true\r\n    },\r\n];\r\n\r\n\r\nexport default services.filter((service) => { return service.available })\r\n","const serviceConfig = {\r\n    \"Laser\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"skintype\",\r\n    \"kj\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Makeup\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"color_used\",\r\n    \"technique\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Scalp\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"pigment_used\",\r\n    \"session_duration\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Skin\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"type_of_pigmentation\",\r\n    \"pulses\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Tattoo\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"ink_used\",\r\n    \"session_duration\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Chem-Peel\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"type_of_peel\",\r\n    \"duration\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Natural-Peel\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"type_of_peel\",\r\n    \"duration\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Microneedling\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"needle_depth\",\r\n    \"serum_used\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Facial\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"products_used\",\r\n    \"duration\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Sclerotherapy\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"sclerosing_agent_used\",\r\n    \"pulses\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Botox\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"units_used\",\r\n    \"technique\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Fillers\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"product_used\",\r\n    \"amount_used\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Microdermabrasion\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"type_of_crystals_used\",\r\n    \"duration\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Contouring\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"technique\",\r\n    \"session_duration\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ],\r\n    \"Rejuvenation\" : [\r\n    \"date\",\r\n    \"area\",\r\n    \"procedure\",\r\n    \"duration\",\r\n    \"cost\",\r\n    \"comments\",\r\n    ]\r\n}\r\n\r\nexport default serviceConfig\r\n","import {Axios} from \"../root\"\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const getData = (params,customer_id) => {\r\n  console.log(\"CUSTOMERID: \", customer_id)\r\n    return async dispatch => {\r\n      await Axios.post(\"customers/sessions\", {customer_id:customer_id}).then(response => {\r\n        if(!response.data.status){\r\n          toast.error('Internal Server Error!');\r\n        }\r\n        else{\r\n          let rdata = response.data;\r\n          let { page, perPage } = params;\r\n          let totalPages = Math.ceil(rdata.data.length / perPage);\r\n          let fdata = [];\r\n          let newparams = {};\r\n          if (page !== undefined && perPage !== undefined) {\r\n            let calculatedPage = (page - 1) * perPage;\r\n            let calculatedPerPage = page * perPage;\r\n              if(calculatedPage > rdata.data.length){\r\n              totalPages = Math.ceil(rdata.data.length / perPage);\r\n              fdata = rdata.data.slice(0, perPage);\r\n              newparams['page'] = 0;\r\n              newparams['perPage'] = perPage;\r\n            }else{\r\n              fdata = rdata.data.slice(calculatedPage, calculatedPerPage);\r\n              newparams = params;\r\n            }\r\n          }else {\r\n            totalPages = Math.ceil(rdata.data.length / perPage);\r\n            fdata = rdata.data.slice(0, perPage);\r\n            newparams = params;\r\n          }\r\n          if(fdata.length === 0){\r\n            newparams['page'] = 0;\r\n            newparams['perPage'] = perPage;\r\n            fdata = rdata.data.slice(0, perPage);\r\n          }\r\n          dispatch({ type: \"GET_SESSIONS_ALL_DATA\", data: rdata.data })\r\n          dispatch({\r\n            type: \"GET_SESSIONS_DATA\",\r\n            data: fdata,\r\n            totalPages: totalPages,\r\n            newparams\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  export const getCustomers = (service) => {\r\n    return async dispatch => {\r\n      await Axios.post(\"customers/init_session_data\", {service: service}).then(response => {\r\n        if(!response.data.status){\r\n          toast.error('Internal Server Error!');\r\n        }\r\n        else{\r\n          dispatch({ type: \"GET_CUSTOMERS\", data: response.data })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  export const filterData = value => {\r\n    return dispatch => dispatch({ type: \"FILTER_SESSIONS_DATA\", value })\r\n  }\r\n\r\n  export const deleteData = obj => {\r\n    return dispatch => {\r\n      Axios\r\n        .post(\"customers/session_delete\",obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  export const updateData = obj => {\r\n    console.log(obj);\r\n    return (dispatch, getState) => {\r\n      Axios\r\n        .post(\"customers/session_update\", obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  export const addData = obj => {\r\n    return (dispatch, getState) => {\r\n      Axios\r\n        .post(\"customers/session_add\", obj)\r\n        .then(response => {\r\n          if(!response.data.status){\r\n            toast.error(response.data.msg);\r\n          }\r\n          else{\r\n            dispatch(getData(obj))\r\n          }\r\n        })\r\n    }\r\n  }\r\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: IMultiselectProps;\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {this.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value)}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow, hideSelectedList } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {!hideSelectedList && this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: v => v,\n  optionValueDecorator: v => v\n} as IMultiselectProps;\n","import React, { Component } from \"react\"\r\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport classnames from \"classnames\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"flatpickr/dist/themes/light.css\"\r\nimport \"../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\r\nimport Select from \"react-select\"\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport serviceConfig from \"../../../configs/serviceConfig\"\r\n\r\nconst skinTypes = [\r\n  {value:\"1\", label:\"1\"},\r\n  {value:\"2\", label:\"2\"},\r\n  {value:\"3\", label:\"3\"},\r\n  {value:\"4\", label:\"4\"},\r\n  {value:\"5\", label:\"5\"},\r\n  {value:\"6\", label:\"6\"},\r\n]\r\n\r\nconst getToday=()=>{\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth()+1;\r\n  let dt = date.getDate();\r\n\r\n  if (dt < 10) {\r\n    dt = '0' + dt;\r\n  }\r\n  if (month < 10) {\r\n    month = '0' + month;\r\n  }\r\n\r\n  return year + \"-\" + month + \"-\" + dt;\r\n}\r\n\r\nclass DataListSidebar extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    date: getToday(),\r\n    area: \"\",\r\n    skintype: \"\",\r\n    selectedSkinTypeValue: {value:\"1\", label:\"1\"},\r\n    kj: 0,\r\n    cost: 0,\r\n    comments: \"\",\r\n    customer_id: \"\",\r\n    options: [],\r\n    color_used : \"\",\r\n    technique : \"\",\r\n    pigment_used : \"\",\r\n    session_duration : 0,\r\n    type_of_pigmentation : \"\",\r\n    ink_used : \"\",\r\n    type_of_peel : \"\",\r\n    duration : 0,\r\n    needle_depth : 0,\r\n    serum_used : \"\",\r\n    products_used : \"\",\r\n    sclerosing_agent_used : \"\",\r\n    pulses : 0, //kj\r\n    units_used : 0,\r\n    product_used : \"\",\r\n    amount_used : \"\",\r\n    type_of_crystals_used : \"\",\r\n    procedure : \"\",\r\n  }\r\n\r\n  addNew = false\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.props.customer_id !== prevState.customer_id){\r\n      this.setState({ customer_id: this.props.customer_id })\r\n    }\r\n\r\n    if (this.props.data !== null && prevProps.data === null) {\r\n      if (this.props.data._id !== prevState._id) {\r\n        this.setState({ _id: this.props.data._id })\r\n      }\r\n      if (this.props.data.date !== prevState.date) {\r\n        this.setState({ date: this.props.data.date })\r\n      }\r\n      if (this.props.data.area !== prevState.area) {\r\n        this.setState({ area: this.props.data.area })\r\n      }\r\n      if (this.props.data.areas !== prevState.areas) {\r\n        this.setState({ selectedValue: this.props.data.areas })\r\n      }\r\n      if (this.props.data.skintype !== prevState.skintype) {\r\n        this.setState({ selectedSkinTypeValue: {value:this.props.data.skintype, label:this.props.data.skintype} })\r\n        this.setState({ skintype: this.props.data.skintype })\r\n      }\r\n      if (this.props.data.kj !== prevState.kj) {\r\n        this.setState({ kj: this.props.data.kj })\r\n      }\r\n      if (this.props.data.cost !== prevState.cost) {\r\n        this.setState({ cost: this.props.data.cost })\r\n      }\r\n      if (this.props.data.comments !== prevState.comments) {\r\n        this.setState({ comments: this.props.data.comments })\r\n      }\r\n      if (this.props.data.color_used !== prevState.color_used) {\r\n        this.setState({ color_used: this.props.data.color_used })\r\n      }\r\n      if (this.props.data.technique !== prevState.technique) {\r\n        this.setState({ technique: this.props.data.technique })\r\n      }\r\n      if (this.props.data.pigment_used !== prevState.pigment_used) {\r\n        this.setState({ pigment_used: this.props.data.pigment_used })\r\n      }\r\n      if (this.props.data.session_duration !== prevState.session_duration) {\r\n        this.setState({ session_duration: this.props.data.session_duration })\r\n      }\r\n      if (this.props.data.type_of_pigmentation !== prevState.type_of_pigmentation) {\r\n        this.setState({ type_of_pigmentation: this.props.data.type_of_pigmentation })\r\n      }\r\n      if (this.props.data.ink_used !== prevState.ink_used) {\r\n        this.setState({ ink_used: this.props.data.ink_used })\r\n      }\r\n      if (this.props.data.type_of_peel !== prevState.type_of_peel) {\r\n        this.setState({ type_of_peel: this.props.data.type_of_peel })\r\n      }\r\n      if (this.props.data.duration !== prevState.duration) {\r\n        this.setState({ duration: this.props.data.duration })\r\n      }\r\n      if (this.props.data.needle_depth !== prevState.needle_depth) {\r\n        this.setState({ needle_depth: this.props.data.needle_depth })\r\n      }\r\n      if (this.props.data.serum_used !== prevState.serum_used) {\r\n        this.setState({ serum_used: this.props.data.serum_used })\r\n      }\r\n      if (this.props.data.products_used !== prevState.products_used) {\r\n        this.setState({ products_used: this.props.data.products_used })\r\n      }\r\n      if (this.props.data.sclerosing_agent_used !== prevState.sclerosing_agent_used) {\r\n        this.setState({ sclerosing_agent_used: this.props.data.sclerosing_agent_used })\r\n      }\r\n      if (this.props.data.pulses !== prevState.pulses) {\r\n        this.setState({ pulses: this.props.data.pulses })\r\n      }\r\n      if (this.props.data.units_used !== prevState.units_used) {\r\n        this.setState({ units_used: this.props.data.units_used })\r\n      }\r\n      if (this.props.data.product_used !== prevState.product_used) {\r\n        this.setState({ product_used: this.props.data.product_used })\r\n      }\r\n      if (this.props.data.amount_used !== prevState.amount_used) {\r\n        this.setState({ amount_used: this.props.data.amount_used })\r\n      }\r\n      if (this.props.data.type_of_crystals_used !== prevState.type_of_crystals_used) {\r\n        this.setState({ type_of_crystals_used: this.props.data.type_of_crystals_used })\r\n      }\r\n      if (this.props.data.procedure !== prevState.procedure) {\r\n        this.setState({ procedure: this.props.data.procedure })\r\n      }\r\n    }\r\n    if (this.props.data === null && prevProps.data !== null) {\r\n      this.setState({\r\n        _id: \"\",\r\n        date: new Date(),\r\n        area: \"\",\r\n        skintype: \"\",\r\n        kj: 0,\r\n        cost: 0,\r\n        comments: \"\",\r\n        customer_id: '',\r\n        color_used : \"\",\r\n        technique : \"\",\r\n        pigment_used : \"\",\r\n        session_duration : 0,\r\n        type_of_pigmentation : \"\",\r\n        ink_used : \"\",\r\n        type_of_peel : \"\",\r\n        duration : 0,\r\n        needle_depth : 0,\r\n        serum_used : \"\",\r\n        products_used : \"\",\r\n        sclerosing_agent_used : \"\",\r\n        pulses : 0, //kj\r\n        units_used : 0,\r\n        product_used : \"\",\r\n        amount_used : \"\",\r\n        type_of_crystals_used : \"\",\r\n        procedure : \"\",\r\n      })\r\n    }\r\n    if (this.addNew) {\r\n      this.setState({\r\n        _id: \"\",\r\n        date: new Date(),\r\n        area: \"\",\r\n        skintype: \"\",\r\n        kj: 0,\r\n        cost: 0,\r\n        comments: \"\",\r\n        customer_id: '',\r\n        color_used : \"\",\r\n        technique : \"\",\r\n        pigment_used : \"\",\r\n        session_duration : 0,\r\n        type_of_pigmentation : \"\",\r\n        ink_used : \"\",\r\n        type_of_peel : \"\",\r\n        duration : 0,\r\n        needle_depth : 0,\r\n        serum_used : \"\",\r\n        products_used : \"\",\r\n        sclerosing_agent_used : \"\",\r\n        pulses : 0, //kj\r\n        units_used : 0,\r\n        product_used : \"\",\r\n        amount_used : \"\",\r\n        type_of_crystals_used : \"\",\r\n        procedure : \"\",\r\n      })\r\n    }\r\n    this.addNew = false\r\n  }\r\n\r\n  isVisible = (name) => {\r\n    return serviceConfig[this.props.service.value].includes(name);\r\n  }\r\n\r\n  onSelect = (selectedList, selectedItem) => {\r\n    var arrOfVals = [];\r\n    selectedList.forEach(element => {\r\n      arrOfVals.push(element.value);\r\n    });\r\n    this.setState({area: arrOfVals})\r\n  }\r\n\r\n  onRemove = (selectedList, removedItem) => {\r\n    var arrOfVals = [];\r\n    selectedList.forEach(element => {\r\n      arrOfVals.push(element.value);\r\n    });\r\n    this.setState({area: arrOfVals})\r\n  }\r\n\r\n  handleSubmit = obj => {\r\n    \r\n    obj.area = obj.area ? obj.area : \"\";\r\n    obj.skintype = obj.skintype ? obj.skintype: \"\";\r\n    obj.kj = obj.kj ? obj.kj: 0;\r\n    obj.cost = obj.cost ? obj.cost: 0;\r\n    obj.comments = obj.comments ? obj.comments: \"\";\r\n    obj.customer_id = obj.customer_id ? obj.customer_id: \"\";\r\n    obj.color_used = obj.color_used ? obj.color_used : \"\";\r\n    obj.technique = obj.technique ? obj.technique : \"\";\r\n    obj.pigment_used = obj.pigment_used ? obj.pigment_used : \"\";\r\n    obj.session_duration = obj.session_duration ? obj.session_duration : 0;\r\n    obj.type_of_pigmentation = obj.type_of_pigmentation ? obj.type_of_pigmentation : \"\";\r\n    obj.ink_used = obj.ink_used ? obj.ink_used : \"\";\r\n    obj.type_of_peel = obj.type_of_peel ? obj.type_of_peel : \"\";\r\n    obj.duration = obj.duration ? obj.duration : 0;\r\n    obj.needle_depth = obj.needle_depth ? obj.needle_depth : 0;\r\n    obj.serum_used = obj.serum_used ? obj.serum_used : \"\";\r\n    obj.products_used = obj.products_used ? obj.products_used : \"\";\r\n    obj.sclerosing_agent_used = obj.sclerosing_agent_used ? obj.sclerosing_agent_used : \"\";\r\n    obj.pulses = obj.pulses ? obj.pulses : 0; //kj\r\n    obj.units_used = obj.units_used ? obj.units_used : 0;\r\n    obj.product_used = obj.product_used ? obj.product_used : \"\";\r\n    obj.amount_used = obj.amount_used ? obj.amount_used : \"\";\r\n    obj.type_of_crystals_used = obj.type_of_crystals_used ? obj.type_of_crystals_used : \"\";\r\n    obj.procedure = obj.procedure ? obj.procedure : \"\";\r\n\r\n    if (this.props.data !== null) {\r\n      this.props.updateData(obj)\r\n    } else {\r\n      this.addNew = true\r\n      this.props.addData(obj)\r\n    }\r\n    let params = Object.keys(this.props.dataParams).length\r\n      ? this.props.dataParams\r\n      : { page: 1, perPage: 4 }\r\n    this.props.handleSidebar(false, true)\r\n    this.props.getData(params,this.state.customer_id)\r\n  }\r\n\r\n  render() {\r\n    let { show, handleSidebar, data } = this.props\r\n    let { date, area, kj, cost, comments, color_used, technique, pigment_used, session_duration, type_of_pigmentation, ink_used, type_of_peel, duration, needle_depth, serum_used, products_used, sclerosing_agent_used, pulses, units_used, product_used, amount_used, type_of_crystals_used, procedure } = this.state\r\n    return (\r\n      <div\r\n        className={classnames(\"data-list-sidebar\", {\r\n          show: show\r\n        })}>\r\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\r\n          <h4>{data !== null ? \"UPDATE DATA\" : \"ADD NEW DATA\"}</h4>\r\n          <X size={20} onClick={() => handleSidebar(false, true)} />\r\n        </div>\r\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\r\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\r\n            {data !== null ? \"Update\" : \"Submit\"}\r\n          </Button>\r\n          <Button\r\n            className=\"ml-1\"\r\n            color=\"danger\"\r\n            outline\r\n            onClick={() => handleSidebar(false, true)}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"data-list-fields px-2 mt-3\"\r\n          options={{ wheelPropagation: false }}>\r\n          {this.isVisible(\"date\") && <FormGroup>\r\n            <Label for=\"data-date\">Date</Label>\r\n            <Flatpickr\r\n              required\r\n              name=\"date\"\r\n              className=\"form-control\"\r\n              value={date}\r\n              onChange={date => {\r\n                this.setState({ date : date });\r\n              }}\r\n            />\r\n          </FormGroup>}\r\n          {this.isVisible(\"area\") && <FormGroup>\r\n            <Label for=\"data-area\">Area</Label>\r\n            <Multiselect\r\n              options={this.props.bodyarea} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.onSelect} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              searchBox={{'border': 'none', 'fontSize': '10px', 'minHeight': '50px'}}\r\n              displayValue=\"label\" // Property name to display in the dropdown options\r\n            />\r\n          </FormGroup>}\r\n          {this.isVisible(\"skintype\") && <FormGroup>\r\n            <Label for=\"data-skintype\">Skin Type</Label>\r\n            <Select\r\n              id=\"skintype\"\r\n              className=\"React mr-3\"\r\n              classNamePrefix=\"select\"\r\n              value={this.state.selectedSkinTypeValue}\r\n              name=\"skintype\"\r\n              options={skinTypes}\r\n              onChange={e => {\r\n                this.setState({ skintype: e.value })\r\n                this.setState({ selectedSkinTypeValue: {value:e.value, label:e.value} })\r\n              }}\r\n              >\r\n            </Select>\r\n          </FormGroup>}\r\n          {this.isVisible(\"kj\") && <FormGroup>\r\n            <Label for=\"data-kj\">KJ</Label>\r\n            <Input\r\n              type=\"number\"\r\n              inputMode=\"numeric\"\r\n              id=\"data-kj\"\r\n              value={kj}\r\n              onChange={e => this.setState({ kj: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"color_used\") && <FormGroup>\r\n            <Label for=\"data-color-used\">Color Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-color-used\"\r\n              value={color_used}\r\n              onChange={e => this.setState({ color_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"technique\") && <FormGroup>\r\n            <Label for=\"data-technique\">Technique</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-technique\"\r\n              value={technique}\r\n              onChange={e => this.setState({ technique: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"pigment_used\") && <FormGroup>\r\n            <Label for=\"data-pigment-used\">Pigment Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-pigment-used\"\r\n              value={pigment_used}\r\n              onChange={e => this.setState({ pigment_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"session_duration\") && <FormGroup>\r\n            <Label for=\"data-session-duration\">Session Duration</Label>\r\n            <Input\r\n              type=\"number\"\r\n              inputMode=\"numeric\"\r\n              id=\"data-session-duration\"\r\n              value={session_duration}\r\n              onChange={e => this.setState({ session_duration: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"type_of_pigmentation\") && <FormGroup>\r\n            <Label for=\"data-type-of-pigmentation\">Type of Pigmentation</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-type-of-pigmentation\"\r\n              value={type_of_pigmentation}\r\n              onChange={e => this.setState({ type_of_pigmentation: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"ink_used\") && <FormGroup>\r\n            <Label for=\"data-ink-used\">Ink Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-ink-used\"\r\n              value={ink_used}\r\n              onChange={e => this.setState({ ink_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"type_of_peel\") && <FormGroup>\r\n            <Label for=\"data-type-of-peel\">Type Of Peel</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-type-of-peel\"\r\n              value={type_of_peel}\r\n              onChange={e => this.setState({ type_of_peel: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"duration\") && <FormGroup>\r\n            <Label for=\"data-duration\">Duration</Label>\r\n            <Input\r\n              type=\"number\"\r\n              inputMode=\"numeric\"\r\n              id=\"data-duration\"\r\n              value={duration}\r\n              onChange={e => this.setState({ duration: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"needle_depth\") && <FormGroup>\r\n            <Label for=\"data-needle_depth\">Needle Depth</Label>\r\n            <Input\r\n              type=\"number\"\r\n              inputMode=\"numeric\"\r\n              id=\"data-needle_depth\"\r\n              value={needle_depth}\r\n              onChange={e => this.setState({ needle_depth: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"serum_used\") && <FormGroup>\r\n            <Label for=\"data-serum-used\">Serum Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-serum-used\"\r\n              value={serum_used}\r\n              onChange={e => this.setState({ serum_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"products_used\") && <FormGroup>\r\n            <Label for=\"data-products-used\">Products Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-products-used\"\r\n              value={products_used}\r\n              onChange={e => this.setState({ products_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"sclerosing_agent_used\") && <FormGroup>\r\n            <Label for=\"data-sclerosing-agent-used\">Sclerosing Agent Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-sclerosing-agent-used\"\r\n              value={sclerosing_agent_used}\r\n              onChange={e => this.setState({ sclerosing_agent_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"pulses\") && <FormGroup>\r\n            <Label for=\"data-pulses\">Pulses</Label>\r\n            <Input\r\n              type=\"number\"\r\n              inputMode=\"numeric\"\r\n              id=\"data-pulses\"\r\n              value={pulses}\r\n              onChange={e => this.setState({ pulses: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"units_used\") && <FormGroup>\r\n            <Label for=\"data-units-used\">Units Used</Label>\r\n            <Input\r\n              type=\"number\"\r\n              inputMode=\"numeric\"\r\n              id=\"data-units-used\"\r\n              value={units_used}\r\n              onChange={e => this.setState({ units_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"product_used\") && <FormGroup>\r\n            <Label for=\"data-product-used\">Product Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-product-used\"\r\n              value={product_used}\r\n              onChange={e => this.setState({ product_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"amount_used\") && <FormGroup>\r\n            <Label for=\"data-amount-used\">Amount Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-amount-used\"\r\n              value={amount_used}\r\n              onChange={e => this.setState({ amount_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"type_of_crystals_used\") && <FormGroup>\r\n            <Label for=\"data-type-of-crystals-used\">Type Of Crystals Used</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-type-of-crystals-used\"\r\n              value={type_of_crystals_used}\r\n              onChange={e => this.setState({ type_of_crystals_used: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"procedure\") && <FormGroup>\r\n            <Label for=\"data-procedure\">Procedure</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-procedure\"\r\n              value={procedure}\r\n              onChange={e => this.setState({ procedure: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"cost\") && <FormGroup>\r\n            <Label for=\"data-cost\">Cost</Label>\r\n            <Input\r\n              type=\"number\"\r\n              inputMode=\"numeric\"\r\n              id=\"data-cost\"\r\n              value={cost}\r\n              onChange={e => this.setState({ cost: e.target.value })} />\r\n          </FormGroup>}\r\n          {this.isVisible(\"comments\") && <FormGroup>\r\n            <Label for=\"data-comments\">Comments</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"data-comments\"\r\n              value={comments}\r\n              onChange={e => this.setState({ comments: e.target.value })} />\r\n          </FormGroup>}\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DataListSidebar\r\n","import React, { Component } from \"react\"\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  Input,\r\n  Button\r\n} from \"reactstrap\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport classnames from \"classnames\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { history } from \"../../../history\"\r\nimport {\r\n  Edit,\r\n  Trash,\r\n  ChevronDown,\r\n  Check,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  Plus\r\n} from \"react-feather\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  getCustomers,\r\n  getData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  filterData\r\n} from \"../../../redux/actions/sessions\"\r\nimport Sidebar from \"./DataListSidebar\"\r\n\r\nimport \"../../../assets/scss/plugins/extensions/react-paginate.scss\"\r\nimport \"../../../assets/scss/pages/data-list.scss\"\r\nimport \"../../../assets/scss/custom.scss\"\r\nimport Select from \"react-select\"\r\nimport { toast } from \"react-toastify\"\r\nimport serviceConfig from \"../../../configs/serviceConfig\"\r\n\r\nconst selectedStyle = {\r\n  rows: {\r\n    selectedHighlighStyle: {\r\n      backgroundColor: \"rgba(115,103,240,.05)\",\r\n      color: \"#7367F0 !important\",\r\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\r\n      \"&:hover\": {\r\n        transform: \"translateY(0px) !important\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst ActionsComponent = props => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      <Edit\r\n        className=\"cursor-pointer mr-1\"\r\n        size={20}\r\n        onClick={() => {\r\n          return props.currentData(props.row)\r\n        }}\r\n      />\r\n      <Trash\r\n        className=\"cursor-pointer\"\r\n        size={20}\r\n        onClick={() => {\r\n          props.deleteRow(props.row)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomHeader = props => {\r\n  let customers = props.customers;\r\n  let selects = [];\r\n  customers.forEach(customer => {\r\n    selects.push({value:customer._id, label:customer.name})\r\n  });\r\n\r\n  return (\r\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\r\n      <div className=\"actions-left d-flex flex-wrap\">\r\n        <Select\r\n          className=\"React mr-3 customer-select\"\r\n          classNamePrefix=\"select\"\r\n          defaultValue={props.customers.length > 0 ? selects[0]: ''}\r\n          name=\"customers\"\r\n          style={{width:'400px'}}\r\n          options={selects}\r\n          onChange={e => props.handleCustomerChnage(e.value)}>\r\n        </Select>\r\n      <Button\r\n        className=\"add-new-btn\"\r\n        color=\"primary\"\r\n        onClick={() => props.handleSidebar(true, true)}\r\n        outline>\r\n        <Plus size={15} />\r\n        <span className=\"align-middle\">Add New</span>\r\n      </Button>\r\n      </div>\r\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\r\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\r\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\r\n            <span className=\"align-middle mx-50\">\r\n              {`${props.index[0] || 0} - ${props.index[1] || 0} of ${props.total}`}\r\n            </span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\r\n              4\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\r\n              10\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\r\n              15\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\r\n              20\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n        <div className=\"filter-section\">\r\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass DataListConfig extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n    customers: [],\r\n    bodyarea: [],\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    columns: [\r\n      {\r\n        name: \"Date\",\r\n        selector: \"date\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"Area\",\r\n        selector: \"areanames\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"Skin Type\",\r\n        selector: \"skintype\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"KJ\",\r\n        selector: \"kj\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"Cost\",\r\n        selector: \"cost\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"Comments\",\r\n        selector: \"comments\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"color_used\",\r\n        selector: \"color_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"technique\",\r\n        selector: \"technique\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"pigment_used\",\r\n        selector: \"pigment_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"session_duration\",\r\n        selector: \"session_duration\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"type_of_pigmentation\",\r\n        selector: \"type_of_pigmentation\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"ink_used\",\r\n        selector: \"ink_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"type_of_peel\",\r\n        selector: \"type_of_peel\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"duration\",\r\n        selector: \"duration\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"needle_depth\",\r\n        selector: \"needle_depth\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"serum_used\",\r\n        selector: \"serum_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"products_used\",\r\n        selector: \"products_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"sclerosing_agent_used\",\r\n        selector: \"sclerosing_agent_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"pulses\",\r\n        selector: \"pulses\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"units_used\",\r\n        selector: \"units_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"product_used\",\r\n        selector: \"product_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"amount_used\",\r\n        selector: \"amount_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"type_of_crystals_used\",\r\n        selector: \"type_of_crystals_used\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"procedure\",\r\n        selector: \"procedure\",\r\n        sortable: true,\r\n        omit: false\r\n      },\r\n      {\r\n        name: \"Actions\",\r\n        sortable: true,\r\n        cell: row => (\r\n          <ActionsComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    allData: [],\r\n    value: \"\",\r\n    rowsPerPage: 4,\r\n    sidebar: false,\r\n    currentData: null,\r\n    selected: [],\r\n    totalRecords: 0,\r\n    sortIndex: [],\r\n    addNew: \"\",\r\n    customer_id: \"\"\r\n  }\r\n\r\n  \r\n  isVisible = (name) => {\r\n    return serviceConfig[this.props.service.value].includes(name);\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.dataList.data.length !== state.data.length || state.currentPage !== props.parsedFilter.page) {\r\n      return {\r\n        data: props.dataList.data,\r\n        customers: props.dataList.customers,\r\n        bodyarea: props.dataList.bodyarea,\r\n        allData: props.dataList.filteredData,\r\n        totalPages: props.dataList.totalPages,\r\n        currentPage: parseInt(props.parsedFilter.page) - 1,\r\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\r\n        totalRecords: props.dataList.totalRecords,\r\n        sortIndex: props.dataList.sortIndex\r\n      }\r\n    }\r\n\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n\r\n  thumbView = this.props.thumbView\r\n\r\n  componentDidMount() {\r\n\r\n    // this.props.getData(this.props.parsedFilter)\r\n    this.props.getCustomers(this.props.service.value)\r\n    var cols = this.state.columns;\r\n    cols = cols.map((col) => {\r\n      if (col.name != \"Actions\")\r\n        col.omit = !this.isVisible(col.selector)\r\n      return col\r\n    })\r\n    this.setState({columns: cols})\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.service != prevProps.service) {\r\n      this.props.getCustomers(this.props.service.value)\r\n      var cols = this.state.columns;\r\n      cols = cols.map((col) => {\r\n        if (col.name != \"Actions\")\r\n          col.omit = !this.isVisible(col.selector)\r\n        return col\r\n      })\r\n      this.setState({columns: cols})\r\n    }\r\n  }\r\n\r\n\r\n  handleFilter = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.filterData(e.target.value)\r\n  }\r\n\r\n  handleRowsPerPage = value => {\r\n    let { parsedFilter, getData } = this.props\r\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\r\n    history.push(`?page=${page}&perPage=${value}`)\r\n    this.setState({ rowsPerPage: value })\r\n    getData({ page: parsedFilter.page, perPage: value }, this.state.customer_id)\r\n  }\r\n\r\n  handleCustomer = (customer_id) => {\r\n    console.log(\"OKOOK\", customer_id);\r\n    this.setState({customer_id: customer_id});\r\n    this.props.getData(this.props.parsedFilter, customer_id);\r\n  }\r\n\r\n  handleSidebar = (boolean, addNew = false) => {\r\n    if(this.state.customer_id === ''){\r\n        toast.warn('Choose a customer.')\r\n        return\r\n    }\r\n    this.setState({ sidebar: boolean })\r\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\r\n  }\r\n\r\n  handleDelete = row => {\r\n    this.props.deleteData(row)\r\n    this.props.getData(this.props.parsedFilter, this.state.customer_id)\r\n    if (this.state.data.length - 1 === 0) {\r\n      let urlPrefix = this.props.thumbView\r\n        ? \"\"\r\n        : \"\"\r\n      history.push(\r\n        `${urlPrefix}?page=${parseInt(\r\n          this.props.parsedFilter.page - 1\r\n        )}&perPage=${this.props.parsedFilter.perPage}`\r\n      )\r\n      this.props.getData({\r\n        page: this.props.parsedFilter.page - 1,\r\n        perPage: this.props.parsedFilter.perPage\r\n      }, this.state.customer_id)\r\n    }\r\n  }\r\n\r\n  handleCurrentData = obj => {\r\n    this.setState({ currentData: obj })\r\n    this.handleSidebar(true)\r\n  }\r\n\r\n  handlePagination = page => {\r\n    let { parsedFilter, getData } = this.props\r\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\r\n    let urlPrefix = this.props.thumbView\r\n      ? \"\"\r\n      : \"\"\r\n    history.push(\r\n      `${urlPrefix}?page=${page.selected + 1}&perPage=${perPage}`\r\n    )\r\n\r\n    getData({ page: page.selected + 1, perPage: perPage }, this.state.customer_id)\r\n    this.setState({ currentPage: page.selected })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      columns,\r\n      data,\r\n      customers,\r\n      allData,\r\n      totalPages,\r\n      value,\r\n      rowsPerPage,\r\n      currentData,\r\n      sidebar,\r\n      totalRecords,\r\n      sortIndex\r\n    } = this.state\r\n    return (\r\n      <div\r\n        className={`data-list ${\r\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\r\n        }`}>\r\n        <DataTable\r\n          columns={columns}\r\n          data={value.length ? allData : data}\r\n          pagination\r\n          paginationServer\r\n          paginationComponent={() => (\r\n            <ReactPaginate\r\n              previousLabel={<ChevronLeft size={15} />}\r\n              nextLabel={<ChevronRight size={15} />}\r\n              breakLabel=\"...\"\r\n              breakClassName=\"break-me\"\r\n              pageCount={totalPages}\r\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\r\n              activeClassName=\"active\"\r\n              forcePage={\r\n                this.props.parsedFilter.page\r\n                  ? parseInt(this.props.parsedFilter.page - 1)\r\n                  : 0\r\n              }\r\n              onPageChange={page => this.handlePagination(page)}\r\n            />\r\n          )}\r\n          noHeader\r\n          subHeader\r\n          responsive\r\n          pointerOnHover\r\n          selectableRowsHighlight\r\n          onSelectedRowsChange={data =>\r\n            this.setState({ selected: data.selectedRows })\r\n          }\r\n          customStyles={selectedStyle}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              handleSidebar={this.handleSidebar}\r\n              handleFilter={this.handleFilter}\r\n              handleRowsPerPage={this.handleRowsPerPage}\r\n              handleCustomerChnage={this.handleCustomer}\r\n              rowsPerPage={rowsPerPage}\r\n              total={totalRecords}\r\n              index={sortIndex}\r\n              customers={customers}\r\n            />\r\n          }\r\n          sortIcon={<ChevronDown />}\r\n          selectableRowsComponentProps={{\r\n            color: \"primary\",\r\n            icon: <Check className=\"vx-icon\" size={12} />,\r\n            label: \"\",\r\n            size: \"sm\"\r\n          }}\r\n        />\r\n        <Sidebar\r\n          show={sidebar}\r\n          data={currentData}\r\n          updateData={this.props.updateData}\r\n          addData={this.props.addData}\r\n          handleSidebar={this.handleSidebar}\r\n          thumbView={this.props.thumbView}\r\n          getData={this.props.getData}\r\n          dataParams={this.props.parsedFilter}\r\n          addNew={this.state.addNew}\r\n          customer_id={this.state.customer_id}\r\n          service={this.props.service}\r\n          bodyarea={this.state.bodyarea||[]}\r\n        />\r\n        <div\r\n          className={classnames(\"data-list-overlay\", {\r\n            show: sidebar\r\n          })}\r\n          onClick={() => this.handleSidebar(false, true)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.sessions)\r\n  return {\r\n    dataList: state.sessions\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCustomers,\r\n  getData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  filterData\r\n})(DataListConfig)\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\nimport ListViewConfig from \"./DataListConfig\"\r\nimport queryString from \"query-string\"\r\nimport services from \"../../../configs/services\"\r\nimport Select from 'react-select'\r\n\r\nclass Sessions extends React.Component{\r\n\r\n  state = {\r\n    service: {\r\n      \"label\": \"Laser Hair Removal\",\r\n      \"value\": \"Laser\"\r\n    },\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        {/* <Breadcrumbs\r\n          breadCrumbTitle=\"List View\"\r\n          breadCrumbParent=\"Data List\"\r\n          breadCrumbActive=\"List View\"\r\n        /> */}\r\n        <Row className=\"mb-2\">\r\n          <Col sm=\"12\">\r\n            <Select\r\n              className=\"React\"\r\n              classNamePrefix=\"select\"\r\n              name=\"service\"\r\n              value={this.state.service}\r\n              options={services}\r\n              onChange={e => {\r\n                this.setState({ service: {value:e.value, label:e.label} })\r\n              }}\r\n              >\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <ListViewConfig key={this.state.service} service={this.state.service} parsedFilter={queryString.parse(this.props.location.search)}/>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sessions"],"sourceRoot":""}