{"version":3,"sources":["redux/actions/mainSettings/index.js","views/customers/SignModal.js","views/customers/Consentform.js","redux/actions/client/index.js"],"names":["saveMainSettings","settings","dispatch","Axios","post","then","response","console","log","type","data","catch","err","getInitialData","service","get","params","SignModal","state","activeTab","signModal","sigPad","clear","sign","props","handler","getTrimmedCanvas","toDataURL","toggleModal","setState","prevState","Modal","isOpen","this","toggle","className","ModalHeader","ModalBody","penColor","canvasProps","width","height","ref","ModalFooter","Button","color","onClick","React","Component","referredby","value","label","getToday","date","Date","year","getFullYear","month","getMonth","dt","getDate","Consentform","topDate","birthdate","basicquestions","mediahistory","bodyarea","status","signUrl","name","email","defaultAlert","confirmAlert","cancelAlert","saveAlert","successAlert","isActive","consent","title","consent1","consent2","target","url","handleAlert","location","pathname","split","getForm","prevProps","emailSent","history","push","mainSettings","formData","FormData","contactsInfo","document","querySelectorAll","signInfo","contactsInfoData","signInfoData","forEach","element","getAttribute","append","userId","JSON","stringify","window","innerWidth","getElementById","setAttribute","page1","page2","doc","jsPDF","html2canvas","useCORS","canvas","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","widthRatio","heightRatio","ratio","canvasWidth","canvasHeight","marginX","marginY","toBlob","blob","fileUrl1","URL","createObjectURL","revokeObjectURL","canvas2","pageWidth1","pageHeight1","widthRatio1","heightRatio1","ratio1","canvasWidth1","canvasHeight1","marginX1","marginY1","blob2","fileUrl2","w","h","mx","my","submitConsentForm","e","preventDefault","toast","warn","image","addImage","addPage","image1","save","Card","style","position","top","bottom","left","right","overflow","CardBody","Form","id","onSubmit","handleSubmit","src","consentLogo","alt","FormGroup","row","Col","md","size","offset","required","onChange","classNamePrefix","options","Input","placeholder","inputMode","isMulti","Row","map","Item","i","category","key","question","defaultChecked","_id","margin","whiteSpace","readOnly","sm","Ripple","v","t","outline","handleDownload","warning","show","showCancel","reverseButtons","cancelBtnBsStyle","confirmBtnText","cancelBtnText","onConfirm","submit","onCancel","success","confirmBtnBsStyle","showConfirm","error","connect","client"],"mappings":"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","file":"static/js/15.d5b91cdc.chunk.js","sourcesContent":["\r\nimport { history } from \"../../../history\"\r\nimport config from \"../../../configs/config\"\r\nimport {Axios} from \"../root\"\r\nimport jwt_decode from 'jwt-decode'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const saveMainSettings = (settings) => {\r\n  return async dispatch => {\r\n    await Axios.post(\"settings/main_config\", settings)\r\n      .then(response => {\r\n        console.log(response)\r\n        dispatch({ type: \"SET_MAIN_SETTING\", data: response.data })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getInitialData = (service) => {\r\n  return async dispatch => {\r\n    await Axios.get(\"settings/getSettings\", {params:{service: service}}).then(response => {\r\n      dispatch({ type: \"SET_MAIN_SETTING\", data: response.data.data })\r\n    })\r\n  }\r\n}","import React from \"react\"\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\"\r\nimport SignatureCanvas from 'react-signature-canvas'\r\n\r\nclass SignModal extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    signModal: false\r\n  }\r\n\r\n  sigPad = {}\r\n\r\n  clear = () => {\r\n    this.sigPad.clear()\r\n  }\r\n\r\n  sign = () => {\r\n    this.props.handler(!this.props.signModal,'signModal',this.sigPad.getTrimmedCanvas()\r\n    .toDataURL('image/png'))\r\n  }\r\n\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n        signModal: !prevState.signModal\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Modal\r\n            isOpen={this.props.signModal}\r\n            toggle={()=>this.props.handler(!this.props.signModal,'signModal','')}\r\n            className=\"modal-dialog-centered modal-lg\"\r\n        >\r\n            <ModalHeader toggle={()=>this.props.handler(!this.props.signModal,'signModal','')}>\r\n            Sign here\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <SignatureCanvas penColor='black'\r\n                    canvasProps={{width: 800, height: 300, className: 'sigCanvas'}}  ref={(ref) => { this.sigPad = ref }} />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.clear}>\r\n                Clear\r\n            </Button>\r\n            <Button color=\"primary\" onClick={this.sign}>\r\n                Sign\r\n            </Button>{\" \"}\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignModal\r\n","import React from \"react\"\r\nimport \"../../assets/scss/pages/authentication.scss\"\r\nimport { getForm, submitConsentForm } from \"../../redux/actions/client\"\r\nimport consentLogo from \"../../assets/img/logo/logo.png\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Row\r\n} from \"reactstrap\"\r\n\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"flatpickr/dist/themes/light.css\"\r\nimport \"../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\r\nimport \"../../assets/scss/custom.scss\"\r\nimport Radio from \"../../components/@vuexy/radio/RadioVuexy\"\r\nimport {history} from \"../../history\"\r\n\r\nimport SignModal from './SignModal'\r\nimport jsPDF from 'jspdf'\r\nimport { toast } from 'react-toastify';\r\nimport Select from \"react-select\"\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport html2canvas from 'html2canvas';\r\n\r\nimport { getInitialData } from \"../../redux/actions/mainSettings\"\r\n// import LoadingOverlay from 'react-loading-overlay';\r\n\r\nconst referredby = [\r\n  {value: \"Google/website\", label: \"Google/website\"},\r\n  {value: \"Facebook\", label: \"Facebook\"},\r\n  {value: \"Instagram\", label: \"Instagram\"},\r\n  {value: \"Kijiji\", label: \"Kijiji\"},\r\n  {value: \"Walk-in\", label: \"Walk-in\"},\r\n  {value: \"Word of mouth\", label: \"Word of mouth\"}\r\n]\r\n\r\nconst getToday=()=>{\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth()+1;\r\n  let dt = date.getDate();\r\n\r\n  if (dt < 10) {\r\n    dt = '0' + dt;\r\n  }\r\n  if (month < 10) {\r\n    month = '0' + month;\r\n  }\r\n\r\n  return year + \"-\" + month + \"-\" + dt;\r\n}\r\n\r\nclass Consentform extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    let url = this.props.location.pathname.split(\":\")[1];\r\n    this.props.getForm(url);\r\n  }\r\n  state = {\r\n    topDate : getToday(),\r\n    birthdate: getToday(),\r\n    basicquestions: [],\r\n    mediahistory: [],\r\n    bodyarea: [],\r\n    status: false,\r\n    signModal: false,\r\n    signUrl : '',\r\n    name: '',\r\n    email: '',\r\n    defaultAlert : false,\r\n    confirmAlert : false,\r\n    cancelAlert : false,\r\n    saveAlert: false,\r\n    successAlert: false,\r\n    isActive: false,\r\n    consent: {\r\n      title: \"Consent Laser Hair Removal\",\r\n      consent1: \"\",\r\n      consent2: \"\",\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      signModal: !prevState.signModal\r\n    }))\r\n  }\r\n\r\n  handler = (value,target, url) => {\r\n    this.setState({ [target]: value,signUrl: url })\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.response !== this.props.response && this.props.response.status && null !== this.props.response.emailSent) {\r\n      this.setState({\r\n        \"saveAlert\": false,\r\n        \"successAlert\": true\r\n      })\r\n    }\r\n\r\n    if(!this.props.response.status){\r\n      history.push('/error');\r\n    }\r\n\r\n    this.props.getInitialData(this.props.response.service);\r\n    this.state.consent.title = this.props.mainSettings.title;\r\n    this.state.consent.consent1 = this.props.mainSettings.consent1;\r\n    this.state.consent.consent2 = this.props.mainSettings.consent2;\r\n  }\r\n\r\n  handleAlert = (state, value) => {\r\n    this.setState({ [state] : value })\r\n  }\r\n\r\n  async submit(){\r\n    this.handleAlert(\"saveAlert\", true);\r\n    // this.setState({isActive: true});\r\n    let formData = new FormData();;\r\n    let contactsInfo = document.querySelectorAll('#contact-info input');\r\n    let signInfo = document.querySelectorAll('#page2 input');\r\n    let contactsInfoData = {}\r\n    let signInfoData = {}\r\n\r\n    contactsInfo.forEach(element => {\r\n      contactsInfoData[element.getAttribute('name')] = element.value;\r\n    });\r\n    contactsInfoData['topdate'] = this.state.topDate;\r\n    contactsInfoData['birthdate'] = this.state.birthdate;\r\n    contactsInfoData['bodyarea'] = this.state.bodyarea;\r\n    formData.append('service', this.props.response.service);\r\n    formData.append('userId', this.props.response.userId);\r\n    formData.append('contactInfo', JSON.stringify(contactsInfoData));\r\n\r\n    signInfo.forEach(element => {\r\n      signInfoData[element.getAttribute('name')] = element.value;\r\n    });\r\n    signInfoData['sign'] = /*this.state.signUrl*/'';\r\n    formData.append('signInfo', JSON.stringify(signInfoData));\r\n\r\n    if(window.innerWidth < 1024){\r\n      document.getElementById(\"viewport\").setAttribute(\"content\", \"width=1200px\");\r\n    }\r\n\r\n    // this.props.submitConsentForm({});\r\n    const page1 = document.getElementById('page1');\r\n    const page2 = document.getElementById('page2');\r\n    const doc = new jsPDF('p', 'px', 'a4');\r\n\r\n    html2canvas(page1, {\r\n      useCORS: true,\r\n    }).then(canvas => {\r\n      const image = canvas.toDataURL('image/jpeg', 1.0);\r\n      const pageWidth = doc.internal.pageSize.getWidth();\r\n      const pageHeight = doc.internal.pageSize.getHeight();\r\n\r\n      const widthRatio = pageWidth / canvas.width;\r\n      const heightRatio = pageHeight / canvas.height;\r\n      const ratio = widthRatio > heightRatio ? heightRatio : widthRatio;\r\n\r\n      const canvasWidth = canvas.width * ratio;\r\n      const canvasHeight = canvas.height * ratio;\r\n\r\n      const marginX = (pageWidth - canvasWidth) / 2;\r\n      const marginY = (pageHeight - canvasHeight) / 2;\r\n      canvas.toBlob(blob => {\r\n        blob.name = \"page1\";\r\n        var fileUrl1 =  URL.createObjectURL(blob);\r\n        blob.name = \"page1\";\r\n        window.URL.revokeObjectURL(fileUrl1);\r\n        fileUrl1 = window.URL.createObjectURL(blob);\r\n        // window.URL.revokeObjectURL(this.fileUrl);\r\n        // fileUrl = window.URL.createObjectURL(blob);\r\n        // resolve({fileUrl : fileUrl,blob : blob});\r\n\r\n        html2canvas(page2, {\r\n          useCORS: true,\r\n        }).then(canvas2 => {\r\n          const image1 = canvas2.toDataURL('image/jpeg', 1.0);\r\n          const pageWidth1 = doc.internal.pageSize.getWidth();\r\n          const pageHeight1 = doc.internal.pageSize.getHeight();\r\n\r\n          const widthRatio1 = pageWidth1 / canvas2.width;\r\n          const heightRatio1 = pageHeight1 / canvas2.height;\r\n          const ratio1 = widthRatio1 > heightRatio1 ? heightRatio1 : widthRatio1;\r\n\r\n          const canvasWidth1 = canvas2.width * ratio1;\r\n          const canvasHeight1 = canvas2.height * ratio1;\r\n\r\n          const marginX1 = (pageWidth1 - canvasWidth1) / 2;\r\n          const marginY1 = (pageHeight1 - canvasHeight1) / 2;\r\n          canvas2.toBlob(blob2 => {\r\n            blob2.name = \"page2\";\r\n            var fileUrl2 =  URL.createObjectURL(blob2);\r\n            blob2.name = \"page2\";\r\n            window.URL.revokeObjectURL(fileUrl2);\r\n            fileUrl2 = window.URL.createObjectURL(blob2);\r\n\r\n\r\n            formData.append('page1', blob);\r\n            formData.append('page2', blob2);\r\n            formData.append('margin1',JSON.stringify({w: canvasWidth, h: canvasHeight, mx: marginX, my: marginY}));\r\n            formData.append('margin2', JSON.stringify({w: canvasWidth1, h: canvasHeight1, mx: marginX1, my: marginY1}));\r\n            this.props.submitConsentForm(formData);\r\n            document.getElementById(\"viewport\").setAttribute(\"content\", \"width=device-width, initial-scale=1\");\r\n          },'image/jpeg');\r\n        });\r\n\r\n      }, 'image/jpeg');\r\n    });\r\n\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    if(!this.state.signUrl){\r\n      toast.warn('Please sign the consent form.');\r\n      return;\r\n    }\r\n\r\n    this.setState({ defaultAlert : true });\r\n  }\r\n\r\n  async handleDownload(e){\r\n    e.preventDefault();\r\n    if(!this.state.signUrl){\r\n      toast.warn('Please sign the consent form.');\r\n      return;\r\n    }\r\n\r\n    if(window.innerWidth < 1024){\r\n      document.getElementById(\"viewport\").setAttribute(\"content\", \"width=1200px\");\r\n    }\r\n\r\n    const page1 = document.getElementById('page1');\r\n    const page2 = document.getElementById('page2');\r\n    const doc = new jsPDF('p', 'px', 'a4');\r\n\r\n    html2canvas(page1, {\r\n      useCORS: true,\r\n    }).then(canvas => {\r\n      const image = canvas.toDataURL('image/jpeg', 1.0);\r\n      const pageWidth = doc.internal.pageSize.getWidth();\r\n      const pageHeight = doc.internal.pageSize.getHeight();\r\n\r\n      const widthRatio = pageWidth / canvas.width;\r\n      const heightRatio = pageHeight / canvas.height;\r\n      const ratio = widthRatio > heightRatio ? heightRatio : widthRatio;\r\n\r\n      const canvasWidth = canvas.width * ratio;\r\n      const canvasHeight = canvas.height * ratio;\r\n\r\n      const marginX = (pageWidth - canvasWidth) / 2;\r\n      const marginY = (pageHeight - canvasHeight) / 2;\r\n\r\n      doc.addImage(image, 'JPEG', marginX, marginY, canvasWidth, canvasHeight);\r\n      doc.addPage()\r\n\r\n      html2canvas(page2, {\r\n        useCORS: true,\r\n      }).then(canvas2 => {\r\n        const image1 = canvas2.toDataURL('image/jpeg', 1.0);\r\n        const pageWidth1 = doc.internal.pageSize.getWidth();\r\n        const pageHeight1 = doc.internal.pageSize.getHeight();\r\n\r\n        const widthRatio1 = pageWidth1 / canvas2.width;\r\n        const heightRatio1 = pageHeight1 / canvas2.height;\r\n        const ratio1 = widthRatio1 > heightRatio1 ? heightRatio1 : widthRatio1;\r\n\r\n        const canvasWidth1 = canvas2.width * ratio1;\r\n        const canvasHeight1 = canvas2.height * ratio1;\r\n\r\n        const marginX1 = (pageWidth1 - canvasWidth1) / 2;\r\n        const marginY1 = (pageHeight1 - canvasHeight1) / 2;\r\n\r\n        doc.addImage(image1, 'JPEG', marginX1, marginY1, canvasWidth1, canvasHeight1);\r\n\r\n        doc.save('Ink Diva Beauty Consent Form - '+this.state.name+'.pdf');\r\n\r\n        document.getElementById(\"viewport\").setAttribute(\"content\", \"width=device-width, initial-scale=1\");\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      topDate,\r\n      birthdate,\r\n      signUrl,\r\n      name,\r\n      email\r\n    } = this.state\r\n    return (\r\n      <Card style={{position:\"absolute\",top:\"0\",bottom:\"0\",left:\"0\",right:\"0\",overflow:\"auto\"}}>\r\n        <CardBody className=\"container\">\r\n          <Form id=\"pdfbody\" onSubmit={(e)=>this.handleSubmit(e)}>\r\n            <div id=\"page1\" className=\"pl-3 pr-3\">\r\n              <div className=\"col-sm-12 col-xs-12 consent-logo\">\r\n                <img src={consentLogo} alt=\"\" style={{position:\"absolute\"}} width={200}/>\r\n              </div>\r\n              <div id=\"contact-info\">\r\n                <FormGroup row>\r\n                  <Col md={{ size: 6, offset: 6 }} >\r\n                    <span>Date:</span>\r\n                    <Flatpickr\r\n                      required\r\n                      name=\"topdate\"\r\n                      className=\"form-control\"\r\n                      value={topDate}\r\n                      onChange={date => {\r\n                        this.setState({ topDate : date });\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md={{ size: 6, offset: 6 }}>\r\n                    <span>Referred by:</span>\r\n                    <Select\r\n                      className=\"React\"\r\n                      classNamePrefix=\"select\"\r\n                      name=\"referredby\"\r\n                      options={referredby}\r\n                      >\r\n                  </Select>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col>\r\n                    <span>Name & Surname:</span>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={name}\r\n                      onChange={e => {this.setState({name: e.target.value})}}\r\n                      placeholder=\"John Doe\"\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md=\"8\">\r\n                    <span>Address:</span>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      placeholder=\"\"\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"4\" >\r\n                    <span>Postal Code:</span>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"postalcode\"\r\n                      id=\"postalcode\"\r\n                      placeholder=\"14523\"\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md=\"4\" >\r\n                    <span>City:</span>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"city\"\r\n                      id=\"city\"\r\n                      placeholder=\"\"\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"4\" >\r\n                    <span>Phone:</span>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      inputMode=\"numeric\"\r\n                      name=\"phone\"\r\n                      id=\"phone\"\r\n                      placeholder=\"\"\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md=\"8\" >\r\n                    <span>Areas to be treated:</span>\r\n                    <Select\r\n                      className=\"React\"\r\n                      classNamePrefix=\"select\"\r\n                      isMulti\r\n                      name=\"bodyarea\"\r\n                      options={this.props.response.bodyarea}\r\n                      onChange={e => {this.setState({bodyarea: e})}}\r\n                      >\r\n                      </Select>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md=\"5\" >\r\n                    <span>Date of birth:</span>\r\n                    <Flatpickr\r\n                      required\r\n                      name=\"birthdate\"\r\n                      className=\"form-control\"\r\n                      value={birthdate}\r\n                      onChange={date => {\r\n                        this.setState({ birthdate : date });\r\n                      }}\r\n                      />\r\n                  </Col>\r\n                  <Col md=\"5\" >\r\n                    <span>Email:</span>\r\n                    <Input\r\n                      required\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"Email\"\r\n                      placeholder=\"Email\"\r\n                      value={email}\r\n                      onChange={e => {this.setState({email: e.target.value})}}\r\n                    />\r\n                  </Col>\r\n                </FormGroup>\r\n              </div>\r\n          <Row>\r\n            {\r\n              this.props.response.basicquestions?\r\n                this.props.response.basicquestions.map((Item, i)=>{\r\n                  if(Item.category === 'Check'){\r\n                      if(i % 2 === 0)\r\n                        return (\r\n                              <Col md='6' key={i} className=\"question-center\">\r\n                                    <div className=\"d-inline-block mr-1 col-md-3\">{Item.question}</div>\r\n                                    <div className=\"d-inline-block mr-1\">\r\n                                      <Radio label=\"Yes\" defaultChecked={false} name={Item._id} />\r\n                                    </div>\r\n                                    <div className=\"d-inline-block mr-1\">\r\n                                      <Radio label=\"No\" defaultChecked={false} name={Item._id} />\r\n                                    </div>\r\n                                </Col>\r\n                            )\r\n                      else{\r\n                        return (\r\n                          <Col md='6' key={i} className=\"question-center\">\r\n                            <div className=\"d-inline-block mr-1 col-md-3\">{Item.question}</div>\r\n                                <div className=\"d-inline-block mr-1\">\r\n                                  <Radio label=\"Yes\" defaultChecked={false} name={Item._id} />\r\n                                </div>\r\n                                <div className=\"d-inline-block mr-1\">\r\n                                  <Radio label=\"No\" defaultChecked={false} name={Item._id} />\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                      }\r\n                    }\r\n                    else{\r\n                      if(i % 2 === 0){\r\n                        return (<Col  md='6'  key={i} className=\"question-center\">\r\n                                  <div className=\"d-inline-block mr-1 col-md-3\">{Item.question}</div>\r\n                                    <Input type=\"text\" name={Item.question} id={Item._id} />\r\n                                </Col>)\r\n                      }\r\n                      else{\r\n                        return (<Col  md='6'  key={i} className=\"question-center\">\r\n                                  <div className=\"d-inline-block mr-1 col-md-3\">{Item.question}</div>\r\n                                    <Input type=\"text\" name={Item.question} id={Item._id} />\r\n                                </Col>)\r\n                      }\r\n                    }\r\n                  }\r\n                ):null\r\n            }\r\n          </Row>\r\n            <h3 className=\"text-center mt-2\" >Medical History</h3>\r\n            {/* Mdical History */}\r\n            <Row>\r\n            {\r\n              this.props.response.mediahistory?\r\n                this.props.response.mediahistory.map((Item, i)=>{\r\n                      if(i % 2 === 0)\r\n                        return (\r\n                              <Col md='6' key={i} className=\"question-center\">\r\n                                <div className=\"d-inline-block mr-1 col-md-3\">{Item.question}</div>\r\n                                    <div className=\"d-inline-block mr-1\">\r\n                                      <Radio label=\"Yes\" defaultChecked={false} name={Item._id} />\r\n                                    </div>\r\n                                    <div className=\"d-inline-block mr-1\">\r\n                                      <Radio label=\"No\" defaultChecked={false} name={Item._id} />\r\n                                    </div>\r\n                                </Col>\r\n                            )\r\n                      else{\r\n                        return (\r\n                          <Col md='6' key={i} className=\"question-center\">\r\n                            <div className=\"d-inline-block mr-1 col-md-3\">{Item.question}</div>\r\n                                <div className=\"d-inline-block mr-1\">\r\n                                  <Radio label=\"Yes\" defaultChecked={false} name={Item._id} />\r\n                                </div>\r\n                                <div className=\"d-inline-block mr-1\">\r\n                                  <Radio label=\"No\" defaultChecked={false} name={Item._id} />\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                      }\r\n                  }\r\n                ):null\r\n            }\r\n          </Row>\r\n          <FormGroup row className=\"mt-3\">\r\n              <Col md=\"10\" >\r\n                  <span>Comment:</span>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"comment\"\r\n                    id=\"comment\"\r\n                    placeholder=\"\"\r\n                  />\r\n                </Col>\r\n            </FormGroup>\r\n            </div>\r\n            <div id=\"page2\" className=\"pl-3 pr-3\">\r\n            <h2 className=\"text-center mt-3 mb-3\">{this.state.consent.title}</h2>\r\n            <div className=\"container\" style={{margin:\"0 auto\"}}>\r\n              <p style={{ whiteSpace: 'pre-line' }}>{this.state.consent.consent1}</p>\r\n              <br />\r\n              <b>\r\n              {this.state.consent.consent2}\r\n              </b>\r\n            </div>\r\n            <FormGroup row className=\"mt-3\">\r\n                <Col md={{ size: 1, offset: 2 }} >\r\n                  <span>Name:</span>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"sign_name\"\r\n                    id=\"sign_name\"\r\n                    placeholder=\"John Doe\"\r\n                    value={name}\r\n                    readOnly\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row className=\"mb-3\">\r\n                <Col md={{ size: 1, offset: 2 }} >\r\n                  <span>Date:</span>\r\n                </Col>\r\n                <Col md=\"2\" sm=\"4\">\r\n                  <Input\r\n                      type=\"text\"\r\n                      name=\"signdate\"\r\n                      id=\"sign_name\"\r\n                      value={topDate}\r\n                      readOnly\r\n                    />\r\n                </Col>\r\n                <Col md={{size:6, offset:1}} className='row'>\r\n                  <Col md='4'>\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"button\"\r\n                      className=\"mr-1 mb-1\"\r\n                      onClick={this.toggleModal}\r\n                    >\r\n                    Signature\r\n                  </Button.Ripple>\r\n                  </Col>\r\n                  <Col md='8'>\r\n                    {signUrl !== '' ? <img src={signUrl} alt='Sign' width='150' height='50'/> : ''}\r\n\r\n                  </Col>\r\n                </Col>\r\n              </FormGroup>\r\n            </div>\r\n\r\n              <SignModal {...this.state} handler={(v,t,url)=>this.handler(v,t,url)}/>\r\n\r\n            <FormGroup row>\r\n              <Col md={{ size: 12 }} className=\"text-center\">\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mb-1\"\r\n                  // onClick={()=>this.handleSubmit(this.printDocument)}\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n\r\n                <Button.Ripple\r\n                  outline\r\n                  color=\"warning\"\r\n                  type=\"reset\"\r\n                  className=\"mb-1\"\r\n                >\r\n                  Reset Form\r\n                </Button.Ripple>\r\n                <Button.Ripple\r\n                  outline\r\n                  color=\"success\"\r\n                  type=\"submit\"\r\n                  className=\"ml-1 mb-1\"\r\n                  type=\"submit\"\r\n                  onClick={(e)=>this.handleDownload(e)}\r\n                >\r\n                  Download PDF\r\n                </Button.Ripple>\r\n              </Col>\r\n            </FormGroup>\r\n          </Form>\r\n          <SweetAlert title=\"Are you sure?\"\r\n            warning\r\n            show={this.state.defaultAlert}\r\n            showCancel\r\n            reverseButtons\r\n            cancelBtnBsStyle=\"danger\"\r\n            confirmBtnText=\"Yes, Submit!\"\r\n            cancelBtnText=\"Cancel\"\r\n            onConfirm={() => {\r\n              this.handleAlert(\"basicAlert\", false)\r\n              this.handleAlert(\"defaultAlert\", false)\r\n              // this.handleAlert(\"confirmAlert\", true)\r\n              this.submit()\r\n            }}\r\n            onCancel={() => {\r\n              this.handleAlert(\"basicAlert\", false)\r\n              this.handleAlert(\"defaultAlert\", false)\r\n            }}\r\n          >\r\n            You won't be able to revert this!\r\n        </SweetAlert>\r\n\r\n        <SweetAlert success title=\"Please wait\"\r\n          confirmBtnBsStyle=\"success\"\r\n          showConfirm={false}\r\n          showCancel={false}\r\n          show={this.state.saveAlert}\r\n        >\r\n            <p className=\"sweet-alert-text\">Please wait, we are saving your consent form and sending via email.</p>\r\n        </SweetAlert>\r\n        <SweetAlert success title=\"Success\"\r\n          confirmBtnBsStyle=\"success\"\r\n          show={this.state.successAlert}\r\n          onConfirm={() => {\r\n            this.handleAlert(\"saveAlert\", false)\r\n            this.handleAlert(\"successAlert\", false)\r\n          }}\r\n        >\r\n            <p className=\"sweet-alert-text\">Your record has been successfully saved.<br/>You will receive your signed form via email shortly.</p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert success title=\"Deleted!\"\r\n          confirmBtnBsStyle=\"success\"\r\n          show={this.state.confirmAlert}\r\n          onConfirm={() => {\r\n            this.handleAlert(\"defaultAlert\", false)\r\n            this.handleAlert(\"confirmAlert\", false)\r\n          }}\r\n        >\r\n            <p className=\"sweet-alert-text\">Your file has been deleted.</p>\r\n        </SweetAlert>\r\n\r\n        <SweetAlert error title=\"Cancelled\"\r\n          confirmBtnBsStyle=\"success\"\r\n          show={this.state.cancelAlert}\r\n          onConfirm={() =>{\r\n            this.handleAlert(\"defaultAlert\", false)\r\n            this.handleAlert(\"cancelAlert\", false)\r\n          }}\r\n        >\r\n            <p className=\"sweet-alert-text\">\r\n              Your imaginary file is safe :)\r\n            </p>\r\n        </SweetAlert>\r\n\r\n\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n{\r\n  response : state.client,\r\n  mainSettings: state.mainSettings\r\n})\r\nexport default connect(mapStateToProps, { getForm, submitConsentForm, getInitialData })(Consentform)\r\n","import {Axios} from \"../root\"\r\nimport { toast } from 'react-toastify';\r\nimport { history } from \"../../../history\"\r\n\r\nexport const getForm = url => {\r\n    return dispatch => {\r\n      Axios\r\n        .post(\"customers/get_consent_form\", {\r\n          url: url\r\n        })\r\n        .then(response => {\r\n            dispatch({type:'CONSENT_FORM', data:response.data});\r\n        })\r\n    }\r\n  }\r\n\r\n  export const submitConsentForm = data => {\r\n    return dispatch => {\r\n      Axios\r\n        .post(\"customers/submit_consent_form\", data)\r\n        .then(response => {\r\n            // if(response.data.status && response.data.emailSent){\r\n            //   toast.success(\"Email sent successfully.\");\r\n            // }\r\n            // else{\r\n            //   toast.success(\"Email didn't send correctly.\");\r\n            // }\r\n            dispatch({type:'SUBMIT_CONSENT_FORM', data:response.data});\r\n        }).catch(err => {\r\n          throw err;\r\n      })\r\n    }\r\n  }\r\n"],"sourceRoot":""}